{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Cinema-React-Project\\\\template\\\\src\\\\pages\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Pagination2 from \"../../components/Pagination/Pagination\";\nimport LocalSearch from \"../../components/Search/LocalSearch\";\nimport SingleData from \"../../components/SingleData/SingleData\";\nimport Myloader from \"react-spinners/PuffLoader\";\nimport Genre from \"../../components/Genres/Genre\";\nimport useGenre from \"../../components/Genres/UseGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [treadingContent, setTreadingContent] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterGenre, setFilterGenre] = useState([]);\n  const [genreTitle, setGenreTitle] = useState(); // eslint-disable-next-line\n\n  const [color, setColor] = useState(\"grey\");\n  const genreforURL = useGenre(filterGenre); // fetch Movies from TMDB\n\n  const fetchMovieApi = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(` \n      https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&page=${page}&language=en-US&sort_by=popularity.desc&with_genres=${genreforURL}\n      `);\n      setTreadingContent(data.results);\n      setNumOfPages(100);\n      setIsLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchSearchApi = async () => {\n    if (searchTerm) {\n      const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&query=${searchTerm}&page=${page}&sort_by=popularity.desc&page=2`;\n      const {\n        data\n      } = await axios.get(SEARCH_API);\n      setTreadingContent(data.results);\n      setNumOfPages(data.total_pages);\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n\n    if (searchTerm) {\n      fetchSearchApi();\n    } else {\n      fetchMovieApi();\n    }\n\n    return () => {\n      setTreadingContent();\n    }; // eslint-disable-next-line\n  }, [page, isLoading, genreforURL]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"all__movies\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my__main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TreadingHome\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [genreTitle && genreTitle.name, \" Movies:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalSearch, {\n          setSearchTerm: setSearchTerm,\n          searchTerm: searchTerm,\n          fetchSearchApi: fetchSearchApi,\n          numOfpages: numOfPages,\n          setIsLoading: setIsLoading,\n          media: \"movies\",\n          placehold: \"Search Movies\",\n          isLoading: isLoading,\n          treadingContent: treadingContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sec__main \",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"all_genres \",\n          children: /*#__PURE__*/_jsxDEV(Genre, {\n            media: \"movie\",\n            setFilterGenre: setFilterGenre,\n            filterGenre: filterGenre,\n            setTreadingContent: setTreadingContent,\n            setPage: setPage,\n            numOfpages: numOfPages,\n            page: page,\n            genreTitle: genreTitle,\n            setGenreTitle: setGenreTitle,\n            treadingContent: treadingContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pag  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ListContent\",\n        children: isLoading && treadingContent ? treadingContent.map(n => /*#__PURE__*/_jsxDEV(SingleData, { ...n,\n          mediaType: \"movie\"\n        }, n.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading  \",\n          style: {\n            display: \"flex\",\n            height: \"450px\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Myloader, {\n            color: color,\n            size: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"grey\",\n              fontSize: \"13px\",\n              marginLeft: \"10px\",\n              marginTop: \"10px\"\n            },\n            children: \"fetching data ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination2, {\n        setPage: setPage,\n        numOfPages: numOfPages,\n        media: \"movies\",\n        searchTerm: searchTerm,\n        setIsLoading: setIsLoading,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Movies, \"vDdHB0mYpA0z9QJh7lM125xp1TU=\", false, function () {\n  return [useGenre];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["axios","useEffect","useState","Pagination2","LocalSearch","SingleData","Myloader","Genre","useGenre","Movies","treadingContent","setTreadingContent","page","setPage","numOfPages","setNumOfPages","searchTerm","setSearchTerm","isLoading","setIsLoading","filterGenre","setFilterGenre","genreTitle","setGenreTitle","color","setColor","genreforURL","fetchMovieApi","data","get","process","env","REACT_APP_API_KEY","results","error","console","log","fetchSearchApi","SEARCH_API","total_pages","window","scroll","name","map","n","id","display","height","justifyContent","alignItems","fontSize","marginLeft","marginTop"],"sources":["C:/Users/dell/Cinema-React-Project/template/src/pages/Movies/Movies.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Pagination2 from \"../../components/Pagination/Pagination\";\r\nimport LocalSearch from \"../../components/Search/LocalSearch\";\r\nimport SingleData from \"../../components/SingleData/SingleData\";\r\nimport Myloader from \"react-spinners/PuffLoader\";\r\nimport Genre from \"../../components/Genres/Genre\";\r\nimport useGenre from \"../../components/Genres/UseGenre\";\r\n\r\nconst Movies = () => {\r\n  const [treadingContent, setTreadingContent] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filterGenre, setFilterGenre] = useState([]);\r\n  const [genreTitle, setGenreTitle] = useState();\r\n  // eslint-disable-next-line\r\n  const [color, setColor] = useState(\"grey\");\r\n  const genreforURL = useGenre(filterGenre);\r\n\r\n  // fetch Movies from TMDB\r\n  const fetchMovieApi = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        ` \r\n      https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&page=${page}&language=en-US&sort_by=popularity.desc&with_genres=${genreforURL}\r\n      `\r\n      );\r\n      setTreadingContent(data.results);\r\n      setNumOfPages(100);\r\n      setIsLoading(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchSearchApi = async () => {\r\n    if (searchTerm) {\r\n      const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&query=${searchTerm}&page=${page}&sort_by=popularity.desc&page=2`;\r\n      const { data } = await axios.get(SEARCH_API);\r\n      setTreadingContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n      setIsLoading(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    if (searchTerm) {\r\n      fetchSearchApi();\r\n    } else {\r\n      fetchMovieApi();\r\n    }\r\n    return () => {\r\n      setTreadingContent();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [page, isLoading, genreforURL]);\r\n\r\n  return (\r\n    <>\r\n      <main className=\"all__movies\">\r\n        <div className=\"my__main\">\r\n          <div className=\"TreadingHome\">\r\n            <h3>{genreTitle && genreTitle.name} Movies:</h3>\r\n          </div>\r\n          <LocalSearch\r\n            setSearchTerm={setSearchTerm}\r\n            searchTerm={searchTerm}\r\n            fetchSearchApi={fetchSearchApi}\r\n            numOfpages={numOfPages}\r\n            setIsLoading={setIsLoading}\r\n            media=\"movies\"\r\n            placehold=\"Search Movies\"\r\n            isLoading={isLoading}\r\n            treadingContent={treadingContent}\r\n          />\r\n        </div>\r\n        <div className=\"sec__main \">\r\n          <span className=\"all_genres \">\r\n            <Genre\r\n              media=\"movie\"\r\n              setFilterGenre={setFilterGenre}\r\n              filterGenre={filterGenre}\r\n              setTreadingContent={setTreadingContent}\r\n              setPage={setPage}\r\n              numOfpages={numOfPages}\r\n              page={page}\r\n              genreTitle={genreTitle}\r\n              setGenreTitle={setGenreTitle}\r\n              treadingContent={treadingContent}\r\n            />\r\n          </span>\r\n          <div className=\"pag  \">\r\n            {/* <Pagination2\r\n              setPage={setPage}\r\n              numOfPages={numOfPages}\r\n              media=\"movies\"\r\n              page={page}\r\n              setIsLoading={setIsLoading}\r\n              searchTerm={searchTerm}\r\n              style={{ marginBottom: \"10px\" }}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ListContent\">\r\n          {isLoading && treadingContent ? (\r\n            treadingContent.map((n) => (\r\n              <SingleData key={n.id} {...n} mediaType=\"movie\" />\r\n            ))\r\n          ) : (\r\n            <div\r\n              className=\"loading  \"\r\n              style={{\r\n                display: \"flex\",\r\n                height: \"450px\",\r\n\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Myloader color={color} size={60} />\r\n              <p\r\n                style={{\r\n                  color: \"grey\",\r\n                  fontSize: \"13px\",\r\n                  marginLeft: \"10px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                fetching data ...\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Pagination2\r\n          setPage={setPage}\r\n          numOfPages={numOfPages}\r\n          media=\"movies\"\r\n          searchTerm={searchTerm}\r\n          setIsLoading={setIsLoading}\r\n          page={page}\r\n        />\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,EAA5C;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,EAA5C,CAPmB,CAQnB;;EACA,MAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,MAAD,CAAlC;EACA,MAAMwB,WAAW,GAAGlB,QAAQ,CAACY,WAAD,CAA5B,CAVmB,CAYnB;;EACA,MAAMO,aAAa,GAAG,YAAY;IAChC,IAAI;MACF,MAAM;QAAEC;MAAF,IAAW,MAAM5B,KAAK,CAAC6B,GAAN,CACpB;AACT,4DAA4DC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SAAQpB,IAAK,uDAAsDc,WAAY;AACzK,OAH6B,CAAvB;MAKAf,kBAAkB,CAACiB,IAAI,CAACK,OAAN,CAAlB;MACAlB,aAAa,CAAC,GAAD,CAAb;MACAI,YAAY,CAAC,IAAD,CAAZ;IACD,CATD,CASE,OAAOe,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAbD;;EAeA,MAAMG,cAAc,GAAG,YAAY;IACjC,IAAIrB,UAAJ,EAAgB;MACd,MAAMsB,UAAU,GAAI,qDAAoDR,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UAAShB,UAAW,SAAQJ,IAAK,iCAAvI;MACA,MAAM;QAAEgB;MAAF,IAAW,MAAM5B,KAAK,CAAC6B,GAAN,CAAUS,UAAV,CAAvB;MACA3B,kBAAkB,CAACiB,IAAI,CAACK,OAAN,CAAlB;MACAlB,aAAa,CAACa,IAAI,CAACW,WAAN,CAAb;MACApB,YAAY,CAAC,IAAD,CAAZ;IACD;EACF,CARD;;EAUAlB,SAAS,CAAC,MAAM;IACduC,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;;IACA,IAAIzB,UAAJ,EAAgB;MACdqB,cAAc;IACf,CAFD,MAEO;MACLV,aAAa;IACd;;IACD,OAAO,MAAM;MACXhB,kBAAkB;IACnB,CAFD,CAPc,CAUd;EACD,CAXQ,EAWN,CAACC,IAAD,EAAOM,SAAP,EAAkBQ,WAAlB,CAXM,CAAT;EAaA,oBACE;IAAA,uBACE;MAAM,SAAS,EAAC,aAAhB;MAAA,wBACE;QAAK,SAAS,EAAC,UAAf;QAAA,wBACE;UAAK,SAAS,EAAC,cAAf;UAAA,uBACE;YAAA,WAAKJ,UAAU,IAAIA,UAAU,CAACoB,IAA9B;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,WAAD;UACE,aAAa,EAAEzB,aADjB;UAEE,UAAU,EAAED,UAFd;UAGE,cAAc,EAAEqB,cAHlB;UAIE,UAAU,EAAEvB,UAJd;UAKE,YAAY,EAAEK,YALhB;UAME,KAAK,EAAC,QANR;UAOE,SAAS,EAAC,eAPZ;UAQE,SAAS,EAAED,SARb;UASE,eAAe,EAAER;QATnB;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAiBE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAM,SAAS,EAAC,aAAhB;UAAA,uBACE,QAAC,KAAD;YACE,KAAK,EAAC,OADR;YAEE,cAAc,EAAEW,cAFlB;YAGE,WAAW,EAAED,WAHf;YAIE,kBAAkB,EAAET,kBAJtB;YAKE,OAAO,EAAEE,OALX;YAME,UAAU,EAAEC,UANd;YAOE,IAAI,EAAEF,IAPR;YAQE,UAAU,EAAEU,UARd;YASE,aAAa,EAAEC,aATjB;YAUE,eAAe,EAAEb;UAVnB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAeE;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF,eA6CE;QAAK,SAAS,EAAC,aAAf;QAAA,UACGQ,SAAS,IAAIR,eAAb,GACCA,eAAe,CAACiC,GAAhB,CAAqBC,CAAD,iBAClB,QAAC,UAAD,OAA2BA,CAA3B;UAA8B,SAAS,EAAC;QAAxC,GAAiBA,CAAC,CAACC,EAAnB;UAAA;UAAA;UAAA;QAAA,QADF,CADD,gBAKC;UACE,SAAS,EAAC,WADZ;UAEE,KAAK,EAAE;YACLC,OAAO,EAAE,MADJ;YAELC,MAAM,EAAE,OAFH;YAILC,cAAc,EAAE,QAJX;YAKLC,UAAU,EAAE;UALP,CAFT;UAAA,wBAUE,QAAC,QAAD;YAAU,KAAK,EAAEzB,KAAjB;YAAwB,IAAI,EAAE;UAA9B;YAAA;YAAA;YAAA;UAAA,QAVF,eAWE;YACE,KAAK,EAAE;cACLA,KAAK,EAAE,MADF;cAEL0B,QAAQ,EAAE,MAFL;cAGLC,UAAU,EAAE,MAHP;cAILC,SAAS,EAAE;YAJN,CADT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAXF;QAAA;UAAA;UAAA;UAAA;QAAA;MANJ;QAAA;QAAA;QAAA;MAAA,QA7CF,eA2EE,QAAC,WAAD;QACE,OAAO,EAAEvC,OADX;QAEE,UAAU,EAAEC,UAFd;QAGE,KAAK,EAAC,QAHR;QAIE,UAAU,EAAEE,UAJd;QAKE,YAAY,EAAEG,YALhB;QAME,IAAI,EAAEP;MANR;QAAA;QAAA;QAAA;MAAA,QA3EF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAwFD,CA3ID;;GAAMH,M;UAUgBD,Q;;;KAVhBC,M;AA6IN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}