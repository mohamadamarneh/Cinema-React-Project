{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Cinema-React-Project\\\\template\\\\src\\\\pages\\\\TvSeries\\\\TvSeries.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport LocalSearch from \"../../components/Search/LocalSearch\";\nimport SingleData from \"../../components/SingleData/SingleData\";\nimport Myloader from \"react-spinners/PuffLoader\";\nimport Genre from \"../../components/Genres/Genre\";\nimport useGenre from \"../../components/Genres/UseGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TvSeries = () => {\n  _s();\n\n  const [treadingContent, setTreadingContent] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterGenre, setFilterGenre] = useState([]);\n  const genreforURL = useGenre(filterGenre);\n  const [genreTitle, setGenreTitle] = useState(); // eslint-disable-next-line\n\n  const [color, setColor] = useState(\"grey\");\n\n  const fetchMovieApi = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(` \n        https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY}&page=${page}&sort_by=popularity.desc&with_genres=${genreforURL}\n        `);\n      setTreadingContent(data.results);\n      setIsLoading(true);\n      setNumOfPages(100); // eslint-disable-next-line\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchSearchApi = async () => {\n    if (searchTerm) {\n      const SEARCH_API = `https://api.themoviedb.org/3/search/tv?api_key=${process.env.REACT_APP_API_KEY}&query=${searchTerm}&page=${page}&sort_by=popularity.desc`;\n      const {\n        data\n      } = await axios.get(SEARCH_API);\n      setTreadingContent(data.results);\n      setNumOfPages(data.total_pages);\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n\n    if (searchTerm) {\n      fetchSearchApi();\n    } else {\n      fetchMovieApi();\n    }\n\n    return () => {\n      setTreadingContent(); //clean up\n    }; // eslint-disable-next-line\n  }, [page, isLoading, genreforURL]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"all__series\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my__main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TreadingHome\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", genreTitle && genreTitle.name, \" TV series:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalSearch, {\n          setSearchTerm: setSearchTerm,\n          searchTerm: searchTerm,\n          fetchSearchApi: fetchSearchApi,\n          numOfpages: numOfPages,\n          media: \"series\",\n          placehold: \"Search Tv Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sec__main \",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"all__genres \",\n          children: /*#__PURE__*/_jsxDEV(Genre, {\n            media: \"tv\",\n            setFilterGenre: setFilterGenre,\n            filterGenre: filterGenre,\n            setTreadingContent: setTreadingContent,\n            setPage: setPage,\n            numOfpages: numOfPages,\n            page: page,\n            setGenreTitle: setGenreTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pag  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ListContent\",\n        children: isLoading && treadingContent ? treadingContent.map(n => /*#__PURE__*/_jsxDEV(SingleData, { ...n,\n          mediaType: \"tv\"\n        }, n.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          style: {\n            display: \"flex\",\n            height: \"450px\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Myloader, {\n            color: color,\n            size: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"grey\",\n              fontSize: \"13px\",\n              marginLeft: \"10px\",\n              marginTop: \"10px\"\n            },\n            children: \"fetching data ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n        setPage: setPage,\n        numOfPages: numOfPages,\n        media: \"series\",\n        page: page,\n        searchTerm: searchTerm,\n        setIsLoading: setIsLoading,\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TvSeries, \"ixIeDcrQ3Ggxi8N9sgVKNoIP4ho=\", false, function () {\n  return [useGenre];\n});\n\n_c = TvSeries;\nexport default TvSeries;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvSeries\");","map":{"version":3,"names":["axios","useEffect","useState","Pagination","LocalSearch","SingleData","Myloader","Genre","useGenre","TvSeries","treadingContent","setTreadingContent","page","setPage","numOfPages","setNumOfPages","searchTerm","setSearchTerm","isLoading","setIsLoading","filterGenre","setFilterGenre","genreforURL","genreTitle","setGenreTitle","color","setColor","fetchMovieApi","data","get","process","env","REACT_APP_API_KEY","results","error","console","fetchSearchApi","SEARCH_API","total_pages","window","scroll","name","map","n","id","display","height","justifyContent","alignItems","fontSize","marginLeft","marginTop","marginBottom"],"sources":["C:/Users/dell/Cinema-React-Project/template/src/pages/TvSeries/TvSeries.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport LocalSearch from \"../../components/Search/LocalSearch\";\r\nimport SingleData from \"../../components/SingleData/SingleData\";\r\nimport Myloader from \"react-spinners/PuffLoader\";\r\nimport Genre from \"../../components/Genres/Genre\";\r\nimport useGenre from \"../../components/Genres/UseGenre\";\r\n\r\nconst TvSeries = () => {\r\n  const [treadingContent, setTreadingContent] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filterGenre, setFilterGenre] = useState([]);\r\n  const genreforURL = useGenre(filterGenre);\r\n  const [genreTitle, setGenreTitle] = useState();\r\n  // eslint-disable-next-line\r\n  const [color, setColor] = useState(\"grey\");\r\n\r\n  const fetchMovieApi = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        ` \r\n        https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY}&page=${page}&sort_by=popularity.desc&with_genres=${genreforURL}\r\n        `\r\n      );\r\n      setTreadingContent(data.results);\r\n      setIsLoading(true);\r\n      setNumOfPages(100);\r\n\r\n      // eslint-disable-next-line\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const fetchSearchApi = async () => {\r\n    if (searchTerm) {\r\n      const SEARCH_API = `https://api.themoviedb.org/3/search/tv?api_key=${process.env.REACT_APP_API_KEY}&query=${searchTerm}&page=${page}&sort_by=popularity.desc`;\r\n      const { data } = await axios.get(SEARCH_API);\r\n      setTreadingContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n      setIsLoading(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n\r\n    if (searchTerm) {\r\n      fetchSearchApi();\r\n    } else {\r\n      fetchMovieApi();\r\n    }\r\n    return () => {\r\n      setTreadingContent(); //clean up\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [page, isLoading, genreforURL]);\r\n\r\n  return (\r\n    <>\r\n      <main className=\"all__series\">\r\n        <div className=\"my__main\">\r\n          <div className=\"TreadingHome\">\r\n            <h3> {genreTitle && genreTitle.name} TV series:</h3>\r\n          </div>\r\n          <LocalSearch\r\n            setSearchTerm={setSearchTerm}\r\n            searchTerm={searchTerm}\r\n            fetchSearchApi={fetchSearchApi}\r\n            numOfpages={numOfPages}\r\n            media=\"series\"\r\n            placehold=\"Search Tv Series\"\r\n          />\r\n        </div>\r\n        <div className=\"sec__main \">\r\n          <span className=\"all__genres \">\r\n            <Genre\r\n              media=\"tv\"\r\n              setFilterGenre={setFilterGenre}\r\n              filterGenre={filterGenre}\r\n              setTreadingContent={setTreadingContent}\r\n              setPage={setPage}\r\n              numOfpages={numOfPages}\r\n              page={page}\r\n              setGenreTitle={setGenreTitle}\r\n            />\r\n          </span>\r\n          <div className=\"pag  \">\r\n            {/* <Pagination\r\n              setPage={setPage}\r\n              numOfPages={numOfPages}\r\n              media=\"series\"\r\n              page={page}\r\n              setIsLoading={setIsLoading}\r\n              searchTerm={searchTerm}\r\n              style={{ marginBottom: \"10px\" }}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ListContent\">\r\n          {isLoading && treadingContent ? (\r\n            treadingContent.map((n) => (\r\n              <SingleData key={n.id} {...n} mediaType=\"tv\" />\r\n            ))\r\n          ) : (\r\n            <div\r\n              className=\"loading\"\r\n              style={{\r\n                display: \"flex\",\r\n                height: \"450px\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Myloader color={color} size={60} />\r\n              <p\r\n                style={{\r\n                  color: \"grey\",\r\n                  fontSize: \"13px\",\r\n                  marginLeft: \"10px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                fetching data ...\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {numOfPages > 1 && (\r\n          <Pagination\r\n            setPage={setPage}\r\n            numOfPages={numOfPages}\r\n            media=\"series\"\r\n            page={page}\r\n            searchTerm={searchTerm}\r\n            setIsLoading={setIsLoading}\r\n            style={{ marginBottom: \"10px\" }}\r\n          />\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TvSeries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}